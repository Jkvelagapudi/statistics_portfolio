{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jkvel\\\\OneDrive\\\\Documents\\\\Websites\\\\statistics-portfolio\\\\src\\\\components\\\\U1.js\";\nimport React from 'react';\nimport './U1.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction U1() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"unitOne\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title\",\n        children: \" Unit 1 portfolio \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"terms\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \" Statistics Terms To Know\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \" Statistics - The science of collecting, analyzing, and drawing conclusions from data \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \" Population - The entire collection of individuals or objects about which information is desired \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \" Census - Perfomed to gather information about the entire population \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \" Sample - A subset of the population randomly selected for study in a defined manner \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \" Parameter - Fixed value about a population; Typically unknown; Calculated using census data \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \" Statistic (NOT STATISTICS) - Value calculated from a sample; Used to calculate parameter \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \" Resistant - When a statistic is not affected by outliers (it resists the affects of outliers) \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"central\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \" Measures of Central Tendency \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \" Median - The middle of the data; 50th percentile (Formula is (n+1)/2 where n is sample size) \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \" Mean - The arithmetic average; \\u03BC is population mean (Population) and X\\u0305 is sample mean (Statistic); Formula is (\\u2211x)/n where n is sample size \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \" Mode - The observation that occurs the most often; Can be more than one mode; Not as useful as Mean or Median \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"types\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \" Types of Statistics \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \" Descriptive Statistics - The method of organizing and summarizing data \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \" Infrential Statistics - Involves making generalizations from a sample to a population \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"data\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \" Types of Data \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \" Categorical Data (Qualitative) - Data is sorted into \\u201Ccategories\\u201D that have no meaningful numerical value \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \" Numerical Data (Quantitative) - Observations or measurements take on numerical values; Makes sense to average these values \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"numerical\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \" Types of Numerical Data \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \" Discrete Numerical - Data can only take on specific values in the domain of the variable; Usually counts of items \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \" Continuous Numerical - Data can take on any values in the domain of the variable; Usually measurements of something \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"variables\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \" Types of Data \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \" Univariate - Data that describes a single characteristic of the population \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \" Bivariate - Data that describes two characteristics of the population \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \" Multivariate - Data that describes more than two characteristics \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"categorical-graphs\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bar-graph\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \" Bar Graph \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \" Used for Categorical Data \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \" Bars do not touch \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \" Categorical variable is usually on the horizontal axis (x-axis) and frequency or relative frequency (proportion) is on the vertical axis (y-axis) \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \" Must label both axes and have a title \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \" A double bar graph or segmented bar graph can be used for bivariate categorical data \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pie-chart\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \" Pie Chart \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \" Used for Categorical Data \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \" Label each section, including the percentage, or include a key if there is not enough space to label on the graph \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \" Categorical variable is usually on the horizontal axis (x-axis) and frequency or relative frequency (proportion) is on the vertical axis (y-axis) \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \" Must label both axes and have a title \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \" A double bar graph or segmented bar graph can be used for bivariate categorical data \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \" For both categorical graphs, to describe a graph you must tell which data occured the most and which occured the least \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"numerical-graphs\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dot-plot\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \" Dot Plot \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \" Used for Numerical Data  \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \" Made by putting dots (or Xs) on a number line \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \" Dots (or Xs) must be approximately the same size \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \" Put a title and label the x-axis (there is no y-axis) \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \" You can make comparative dotplots by using the same axis for multiple groups \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stemplots\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \" Stemplots \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \" Used for Univariate, Numerical Data \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \" You must have key so that we know how to read numbers \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \" You can split stems when you have long list of leaves \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \" Must label both axes and have a title \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \" You can make a comparative stemplot to compare two different groups \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Histograms\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \" Hisograms \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \" Bars touch on histograms \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \" THere are two types of Histograms: Discrete and Continuous \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"histo-d\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \" Discrete Histograms \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \" Bars are centered over discrete values \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"histo-c\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \" Continuous Histograms \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \" Bars cover a class (interval) of values \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \" X-Axis is a range of numbers \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"box\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \" Boxplots \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \" Used of Numerical Data \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \" They are easy to make, display outliers, and construction is not subjective \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \" Boxplots cannot be described as Normal, Uniform, or Bimodal, but they can be symmetrical \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \" Useful for comparative displays \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \" First Quartile (Q1) - 25th Percentile; Median - 50th Percentile; Third Quartile (Q3) - 75th Percentile; Interquartile Range (IQR) - Q3-Q1; Lower Fence: Q1 - 1.5(IQR); Upper Fence: Q3 + 1.5(IQR) \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \" Any data points outside the fences are considered outliers \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \" For Numerical Graphs, there is a specific format you must follow \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"SOCS\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: \" S - Shape: Discuss the shape of the distribution \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \" O - Outliers: Outliers are values that are away from the rest of the data; If there is no outlier make sure you state that! \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \" C - Center: Describe the mean or median of the data (only need one of them) \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \" S - Spread: Describe the spread of the data (Range, IQR, or Standard Deviation) \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \" +Context: You must reference the specific problem situation (What does the data represent?); Can be inside any of the other descriptions \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"distribution\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \" Types of Distributions for Numerical Graphs (Shape) \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \" Symmetrical - Refers to data  in which both sides are approximately the same when the graph is folded vertically down the middle \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \" Normal (Bell-shaped) - A special type of symmetrical curve; A very important distribution that occurs often in the real world \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \" Uniform - Rectangular Shaped; A special type of symmetrical curve; Refers to data in which every value/interval has approximately equal frequency \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \" Skewed Left (Negative Skew) - Refers to data in which one side (tail) is longer than the other side; The direction of skew is on the left side or the longer tail; The mean is pulled to the left\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \" Skewed Right (Positive Skew) - Refers to data in which one side (tail) is longer than the other side; The direction of skew is on the right side or the longer tail; The mean is pulled to the right \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \" Bimodal - Distribution with two distinct maximums; Usually caused by two distinctly different averages within the same population \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"variability\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \" Measures of Variablility \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \" Variability - How spread out the data is \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \" Range \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \" Interquartile Range (IQR) \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \" Standard Deviation - Average distance from the mean; Non-resistant; s for sample or \\u03C3 for population \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \" Variance - s^2  for a sample or \\u03C3^2  for a population; Non-resistant; Formula is s^2 = (\\u2211(x-X\\u0305)^2)/n-1 \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"td\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \" Transformations and Combinations \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \" Transformations (Addition) - When adding a constant to a random variable, the mean changes but not the standard deviation; Formula \\u03BC = a + b\\u03BC \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \" Transformations (Multiplication) - When multiplying a constant by a random variable, the mean and the standard deviation changes; Formula \\u03C3 = b\\u03C3 \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \" Combinations - To find the mean for the sum (or difference), add (or subtract) the two means; To find the standard deviation of the sum (or differences),  ALWAYS add the variances, then take the square root. Formula: \\u03BC = \\u03BCa \\xB1 \\u03BCb \\u03C3 = sqrt(\\u03C3a^2 + \\u03C3b^2) \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"z-score\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \" Z-Scores \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \" Z-Scores give a standard score; The number of standard deviations x is away from the mean \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \" Formula z=(x-\\u03BC)/\\u03C3 \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"normal\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \" Normal Distribution Properties \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \" As the standard deviations get added/subtracted from the mean, the percentile changes \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \" Approximately 68% of the observations are within 1\\u03C3 of \\u03BC \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \" Approximately 95% of the observations are within 2\\u03C3 of \\u03BC \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \" Approximately 99.7% of the observations are within 3\\u03C3 of \\u03BC \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \" Percentile - the percent of the population that is less than (or equal to) that value \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ogive\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \" Ogives \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \" Ogives - Add the previous data onto the current data until the last section has 100% of the data in it \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \" Shows Percentile of specific data points \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \" Uses Relative Cumulative Frequency, which keeps adding the data points until it reaches 100% \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n_c = U1;\nexport default U1;\nvar _c;\n$RefreshReg$(_c, \"U1\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","U1","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/jkvel/OneDrive/Documents/Websites/statistics-portfolio/src/components/U1.js"],"sourcesContent":["import React from 'react';\r\nimport './U1.css'\r\n\r\nfunction U1() {\r\n  return (\r\n    <>\r\n    <div className=\"unitOne\">\r\n        <h1 className=\"title\"> Unit 1 portfolio </h1>\r\n\r\n        <div className=\"terms\">\r\n          <h2> Statistics Terms To Know</h2>\r\n            <li> Statistics - The science of collecting, analyzing, and drawing conclusions from data </li>\r\n            <li> Population - The entire collection of individuals or objects about which information is desired </li>\r\n            <li> Census - Perfomed to gather information about the entire population </li>\r\n            <li> Sample - A subset of the population randomly selected for study in a defined manner </li>\r\n            <li> Parameter - Fixed value about a population; Typically unknown; Calculated using census data </li>\r\n            <li> Statistic (NOT STATISTICS) - Value calculated from a sample; Used to calculate parameter </li>\r\n            <li> Resistant - When a statistic is not affected by outliers (it resists the affects of outliers) </li>\r\n        </div>\r\n\r\n        <div className=\"central\">\r\n          <h2> Measures of Central Tendency </h2>\r\n            <li> Median - The middle of the data; 50th percentile (Formula is (n+1)/2 where n is sample size) </li>\r\n            <li> Mean - The arithmetic average; μ is population mean (Population) and X̅ is sample mean (Statistic); Formula is (∑x)/n where n is sample size </li>\r\n            <li> Mode - The observation that occurs the most often; Can be more than one mode; Not as useful as Mean or Median </li>\r\n        </div>\r\n\r\n        <div className=\"types\">\r\n          <h2> Types of Statistics </h2>\r\n          <li> Descriptive Statistics - The method of organizing and summarizing data </li>\r\n          <li> Infrential Statistics - Involves making generalizations from a sample to a population </li>\r\n        </div>\r\n\r\n        <div className=\"data\">\r\n          <h2> Types of Data </h2>\r\n          <li> Categorical Data (Qualitative) - Data is sorted into “categories” that have no meaningful numerical value </li>\r\n          <li> Numerical Data (Quantitative) - Observations or measurements take on numerical values; Makes sense to average these values </li>\r\n        </div>\r\n\r\n        <div className=\"numerical\">\r\n          <h2> Types of Numerical Data </h2>\r\n          <li> Discrete Numerical - Data can only take on specific values in the domain of the variable; Usually counts of items </li>\r\n          <li> Continuous Numerical - Data can take on any values in the domain of the variable; Usually measurements of something </li>\r\n        </div>\r\n\r\n        <div className=\"variables\">\r\n          <h2> Types of Data </h2>\r\n          <li> Univariate - Data that describes a single characteristic of the population </li>\r\n          <li> Bivariate - Data that describes two characteristics of the population </li>\r\n          <li> Multivariate - Data that describes more than two characteristics </li>\r\n        </div>\r\n\r\n        <div className=\"categorical-graphs\">\r\n\r\n          <div className=\"bar-graph\">\r\n            <h2> Bar Graph </h2>\r\n            <li> Used for Categorical Data </li>\r\n            <li> Bars do not touch </li>\r\n            <li> Categorical variable is usually on the horizontal axis (x-axis) and frequency or relative frequency (proportion) is on the vertical axis (y-axis) </li>\r\n            <li> Must label both axes and have a title </li>\r\n            <li> A double bar graph or segmented bar graph can be used for bivariate categorical data </li>\r\n          </div>\r\n\r\n          <div className=\"pie-chart\">\r\n            <h2> Pie Chart </h2>\r\n            <li> Used for Categorical Data </li>\r\n            <li> Label each section, including the percentage, or include a key if there is not enough space to label on the graph </li>\r\n            <li> Categorical variable is usually on the horizontal axis (x-axis) and frequency or relative frequency (proportion) is on the vertical axis (y-axis) </li>\r\n            <li> Must label both axes and have a title </li>\r\n            <li> A double bar graph or segmented bar graph can be used for bivariate categorical data </li>\r\n          </div>\r\n\r\n          <h3> For both categorical graphs, to describe a graph you must tell which data occured the most and which occured the least </h3>\r\n\r\n        </div>\r\n\r\n        <div className=\"numerical-graphs\">\r\n\r\n          <div className=\"dot-plot\">\r\n            <h2> Dot Plot </h2>\r\n            <li> Used for Numerical Data  </li>\r\n            <li> Made by putting dots (or Xs) on a number line </li>\r\n            <li> Dots (or Xs) must be approximately the same size </li>\r\n            <li> Put a title and label the x-axis (there is no y-axis) </li>\r\n            <li> You can make comparative dotplots by using the same axis for multiple groups </li>\r\n          </div>\r\n\r\n          <div className=\"stemplots\">\r\n            <h2> Stemplots </h2>\r\n            <li> Used for Univariate, Numerical Data </li>\r\n            <li> You must have key so that we know how to read numbers </li>\r\n            <li> You can split stems when you have long list of leaves </li>\r\n            <li> Must label both axes and have a title </li>\r\n            <li> You can make a comparative stemplot to compare two different groups </li>\r\n          </div>\r\n\r\n          <div className=\"Histograms\">\r\n            <h2> Hisograms </h2>\r\n            <h3> Bars touch on histograms </h3>\r\n            <h3> THere are two types of Histograms: Discrete and Continuous </h3>\r\n\r\n              <div className=\"histo-d\">\r\n                <h2> Discrete Histograms </h2>\r\n                <li> Bars are centered over discrete values </li>\r\n              </div>\r\n\r\n              <div className=\"histo-c\">\r\n                <h2> Continuous Histograms </h2>\r\n                <li> Bars cover a class (interval) of values </li>\r\n                <li> X-Axis is a range of numbers </li>\r\n              </div>\r\n          </div>\r\n\r\n          <div className=\"box\">\r\n            <h2> Boxplots </h2>\r\n            <li> Used of Numerical Data </li>\r\n            <li> They are easy to make, display outliers, and construction is not subjective </li>\r\n            <li> Boxplots cannot be described as Normal, Uniform, or Bimodal, but they can be symmetrical </li>\r\n            <li> Useful for comparative displays </li>\r\n            <li> First Quartile (Q1) - 25th Percentile; Median - 50th Percentile; Third Quartile (Q3) - 75th Percentile; Interquartile Range (IQR) - Q3-Q1; Lower Fence: Q1 - 1.5(IQR); Upper Fence: Q3 + 1.5(IQR) </li>\r\n            <li> Any data points outside the fences are considered outliers </li>\r\n          </div>\r\n\r\n          <h3> For Numerical Graphs, there is a specific format you must follow </h3>\r\n\r\n          <div className=\"SOCS\">\r\n            \r\n            <li> S - Shape: Discuss the shape of the distribution </li>\r\n            <li> O - Outliers: Outliers are values that are away from the rest of the data; If there is no outlier make sure you state that! </li>\r\n            <li> C - Center: Describe the mean or median of the data (only need one of them) </li>\r\n            <li> S - Spread: Describe the spread of the data (Range, IQR, or Standard Deviation) </li>\r\n            <li> +Context: You must reference the specific problem situation (What does the data represent?); Can be inside any of the other descriptions </li>\r\n\r\n          </div>\r\n\r\n          <div className=\"distribution\">\r\n            <h2> Types of Distributions for Numerical Graphs (Shape) </h2>\r\n            <li> Symmetrical - Refers to data  in which both sides are approximately the same when the graph is folded vertically down the middle </li>\r\n            <li> Normal (Bell-shaped) - A special type of symmetrical curve; A very important distribution that occurs often in the real world </li>\r\n            <li> Uniform - Rectangular Shaped; A special type of symmetrical curve; Refers to data in which every value/interval has approximately equal frequency </li>\r\n            <li> Skewed Left (Negative Skew) - Refers to data in which one side (tail) is longer than the other side; The direction of skew is on the left side or the longer tail; The mean is pulled to the left</li>\r\n            <li> Skewed Right (Positive Skew) - Refers to data in which one side (tail) is longer than the other side; The direction of skew is on the right side or the longer tail; The mean is pulled to the right </li>\r\n            <li> Bimodal - Distribution with two distinct maximums; Usually caused by two distinctly different averages within the same population </li>\r\n          </div>\r\n\r\n        </div>\r\n\r\n        <div className=\"variability\">\r\n          <h2> Measures of Variablility </h2>\r\n          <li> Variability - How spread out the data is </li>\r\n          <li> Range </li>\r\n          <li> Interquartile Range (IQR) </li>\r\n          <li> Standard Deviation - Average distance from the mean; Non-resistant; s for sample or σ for population </li>\r\n          <li> Variance - s^2  for a sample or σ^2  for a population; Non-resistant; Formula is s^2 = (∑(x-X̅)^2)/n-1 </li>\r\n        </div>\r\n\r\n        <div className=\"td\">\r\n          <h2> Transformations and Combinations </h2>\r\n          <li> Transformations (Addition) - When adding a constant to a random variable, the mean changes but not the standard deviation; Formula μ = a + bμ </li>\r\n          <li> Transformations (Multiplication) - When multiplying a constant by a random variable, the mean and the standard deviation changes; Formula σ = bσ </li>\r\n          <li> Combinations - To find the mean for the sum (or difference), add (or subtract) the two means; To find the standard deviation of the sum (or differences),  ALWAYS add the variances, then take the square root. Formula: μ = μa ± μb σ = sqrt(σa^2 + σb^2) </li>\r\n        </div>\r\n\r\n        <div className=\"z-score\">\r\n          <h2> Z-Scores </h2>\r\n          <li> Z-Scores give a standard score; The number of standard deviations x is away from the mean </li>\r\n          <li> Formula z=(x-μ)/σ </li>\r\n        </div>\r\n\r\n        <div className=\"normal\">\r\n          <h2> Normal Distribution Properties </h2>\r\n          <li> As the standard deviations get added/subtracted from the mean, the percentile changes </li>\r\n          <li> Approximately 68% of the observations are within 1σ of μ </li>\r\n          <li> Approximately 95% of the observations are within 2σ of μ </li>\r\n          <li> Approximately 99.7% of the observations are within 3σ of μ </li>\r\n          <li> Percentile - the percent of the population that is less than (or equal to) that value </li> \r\n        </div>\r\n\r\n        <div className=\"ogive\">\r\n          <h2> Ogives </h2>\r\n            <li> Ogives - Add the previous data onto the current data until the last section has 100% of the data in it </li>\r\n            <li> Shows Percentile of specific data points </li>\r\n            <li> Uses Relative Cumulative Frequency, which keeps adding the data points until it reaches 100% </li>\r\n        </div>\r\n\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default U1;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}